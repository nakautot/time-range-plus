function compareTime(n,r){return n[0]-r[0]}function mergeRanges(n,r,e){return n.concat(e?Trp.mergeRange(n.pop(),r):[r])}function toRangeNum(n,r){return parseInt(n,36)/(r||1e3)}function Trp(n,r){void 0!==n&&void 0!==r&&u(n,r);var e=this,t=void 0!==n&&void 0!==r,o=t?[[n,r]]:[];function u(n,r){if(void 0===n||void 0===r||Number.isNaN(n)||Number.isNaN(r))throw Error("Input parameters should be numbers.");if(r<=n)throw Error("Start should be less than end.")}function a(n){if(n>=e.length)throw Error("Index is out of bounds.")}e.length=Number(t),e.add=function(n,r){u(n,r),o.push([n,r]),o=Trp.cleanUpRange(o),e.length=o.length},e.start=function(n){return a(n),o[n][0]},e.end=function(n){return a(n),o[n][1]},e.merge=function(n){var r=o.concat(Trp.toRangeArray(n));o=Trp.cleanUpRange(r),e.length=o.length},e.toString=function(){return(o.length?"[[{0}]]":"[{0}]").replace("{0}",o.join("],["))},e.toDuration=function(){return[].concat.apply([],o).reduce(function(n,r,e){return n+r*(e%2?1:-1)},0)},e.pack=function(r){return[].concat.apply([],o).map(function(n){return Math.round(n*(r||1e3)).toString(36)}).join(":")}}Trp.unpack=function(n,e){var t=new Trp;return n.split(":").reduce(function(n,r){return null===n?r:(t.add(toRangeNum(n,e),toRangeNum(r,e)),null)},null),t},Trp.mergeRange=function(n,r){if(n[0]<=r[0]&&r[0]<=n[1])return[[n[0],n[1]<=r[1]?r[1]:n[1]]];if(n[1]<r[0])return[n,r];throw Error("Parameters need to be sorted via start date before passing.")},Trp.toRangeArray=function(e){return new Array(e.length).fill().map(function(n,r){return[e.start(r),e.end(r)]})},Trp.cleanUpRange=function(n){return n.sort(compareTime).reduce(mergeRanges,[])},Trp.wrap=function(n){var r=new Trp;return Trp.toRangeArray(n).forEach(function(n){r.add(n[0],n[1])}),r},module.exports=Trp;