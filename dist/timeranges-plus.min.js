function compareTime(r,n){return r[0]-n[0]}function mergeRanges(r,n,e){return r.concat(e?Trp.mergeRange(r.pop(),n):[n])}function toRangeNum(r,n){return parseInt(r,36)/(n||1e3)}function passThrough(r){return r}function Trp(r,n){void 0!==r&&void 0!==n&&u(r,n);var e=this,t=void 0!==r&&void 0!==n,o=t?[[r,n]]:[];function u(r,n){if(void 0===r||void 0===n||Number.isNaN(r)||Number.isNaN(n))throw Error("Input parameters should be numbers.");if(n<r)throw Error("Start should be less than end.")}function a(r){if(r>=e.length)throw Error("Index is out of bounds.")}function i(r){var n=o.concat(Trp.toRangeArray(r));o=Trp.cleanUpRange(n),e.length=o.length}e.length=Number(t),e.add=function(r,n){u(r,n),o.push([r,n]),o=Trp.cleanUpRange(o),e.length=o.length},e.start=function(r){return a(r),o[r][0]},e.end=function(r){return a(r),o[r][1]},e.merge=function(r){(Array.isArray(r)?r:[r]).forEach(i)},e.toString=function(){return(o.length?"[[{0}]]":"[{0}]").replace("{0}",o.join("],["))},e.toDuration=function(){return[].concat.apply([],o).reduce(function(r,n,e){return r+n*(e%2?1:-1)},0)},e.pack=function(n,r){return(r||passThrough)([].concat.apply([],o).map(function(r){return Math.round(r*(n||1e3)).toString(36)}).join(":"))}}Trp.unpack=function(r,e,n){var t=new Trp;return(n||passThrough)(r).split(":").reduce(function(r,n){return null===r?n:(t.add(toRangeNum(r,e),toRangeNum(n,e)),null)},null),t},Trp.mergeRange=function(r,n){if(r[0]<=n[0]&&n[0]<=r[1])return[[r[0],r[1]<=n[1]?n[1]:r[1]]];if(r[1]<n[0])return[r,n];throw Error("Parameters need to be sorted via start date before passing.")},Trp.toRangeArray=function(e){return new Array(e.length).fill().map(function(r,n){return[e.start(n),e.end(n)]})},Trp.cleanUpRange=function(r){return r.sort(compareTime).reduce(mergeRanges,[])},Trp.wrap=function(r){var n=new Trp;return Trp.toRangeArray(r).forEach(function(r){n.add(r[0],r[1])}),n},module.exports=Trp;